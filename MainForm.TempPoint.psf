<File version="3.1">
  <FileID>2b855348-feeb-402b-ba34-805d19f52a6d</FileID>
  <LastExport>132502728556214255</LastExport>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAIIESURBVHhe7f1leFTpoy587iPvOR/OXPNhZq73
nZlznTNn+95n699a/+3QTTfeuLtbIBBCEkiQIElIQgiBhCAJEhfi7u7u7u5u9zzPSoBAF91okVD3
j+u+SNmqVbaee61aVfUXRERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERE9FipT/l//yf5R/8vFH5Tt2
7CjfuXMXwzAMwzCzJLt37y5fsOCn8v/jP//n8v/4H/9juRjXS5QR/tf8p//0nxr+8i//EhvWb4D1
9ZtIzCxCSXUriqtaGIZhGIaZ8WlFYXkDfAJCsG/vPvzzP/0T/ut//a+YGuZf7D/8h/9Yvn79eviH
RCO1uBFRmRWIzChnGIZhGGYWJamwAclZhdDWPor/9t/+29jUMP9iH330p3ILq+tILWkSEyhDFMMw
DMMwsy4R6aViRb4JfsGR+GHu3N8uANu37yhPzChCTHYVojPLGYZhGIaZpQlPL0N5fRdOG53+7QKw
a9fu8qrGLkRnVyI6q4JhGIZhmFmaiIxy1LQOwNDQ6GUKwK7yyvoOxIgCECMuzDAMwzDvOrEyYtx5
13lyfSpOe9t5el3qvb7pkfsCVDX34dQpw5cvAHG51YjLqWIYhmGYd554MebEiv9jssRAJgeztxkx
TTlAyut4cp25VVOD5nPnfdNMTe/xbXpy27LVeNumJVqcXt3Sj1Mn31YByK15+eSwSDAMwzAvjhy8
QpMKcdctEjYOgbjuGPRWY+MQBNv7IfCJyJwcKMWA6R6UMnnac+d908jrkrfhgXcsItNKkZBfg+D4
Atx2DVdOU3WZN4mc5s2HofCLylZ5375yAahq6ER8Xo1yR6lKXEYxYtMLniazTDSRxieJFYnLaUKc
uOL47ApxmRdPi2EYhtHsJObX4qZTGPzC05GYI8aMrPK3mgQxDsWkFcH2XjAixKDsE5mN287hSMgq
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
QEREpGFYAIiIiDQQCwAREZEGYgEgIiLSQCwAREREGogFgIiISAOxABAREWkgFgAiIiINxAJARESk
gVgAiIiINBALABERkQZiASAiItJALABEREQaiAWAiIhIA7EAEBERaSAWACIiIg3EAkBERKSBWACI
iIg0EAsAERGRBmIBICIi0kAsAERERBqIBYCIiEgDsQAQERFpIBYAIiIiDcQCQEREpIFYAIiIiDQQ
CwAREZEGYgEgIiLSQCwAREREGogFgIiISAOxABAREWkgFgAiIiINxAJARESkgVgAiIiINBALABER
kQZiASAiItJALABEREQaiAWAiIhIA7EAEBERaSAWACIiIg3EAkBERKSBWACIiIg0EAsAERGRBmIB
ICIi0kAsAERERBqIBYCIiEgDsQAQERFpIBYAIiIiDcQCQEREpIFYAIiIiDQQCwAREZEGYgEgIiLS
QCwAREREGogFgIiISAOxABAREWkgFgAiIiINxAJARESkgVgAiIiINBALABERkQZiASAiItJALABE
REQaiAWAiIhIA7EAEBERaSAWACIiIg3EAkBERKSBWACIiIg0EAsAERGRBmIBICIi0kAsAERERBqI
BYCIiEgDsQAQERFpIBYAIiIiDcQCQEREpIFYAIiIiDQQCwAREZEGYgEgIiLSQCwAREREGogFgIiI
SAOxABAREWkgFgAiIiINxAJARESkgVgAiIiINBALABERkQZiASAiItJALABEREQaiAWAiIhIA7EA
EBERaSAWACIiIg3EAkBERKSBWACIiIg0EAsAERGRBmIBICIi0kAsAERERBqIBYCIiEgDsQAQERFp
IBYAIiIiDcQCQEREpIFYAIiIiDQQCwAREZEGYgEgIiLSQCwAREREGogFgIiISAOxABAREWkgFgAi
IiINxAJARESkgVgAiIiINBALABERkQZiASAiItJALABEREQaiAWAiIhIA7EAEBERaSAWACIiIg3E
AkBERKSBWACIiIg0EAsAERGRBmIBICIi0kAsAERERBqIBYCIiEgDsQAQERFpIBYAIiIiDcQCQERE
pIFYAIiIiDQQCwAREZEGYgEgIiLSQCwAREREGogFgIiISAOxABAREWkgFgAiIiINxAJARESkgVgA
iIiINBALABERkQZiASAiItJALABEREQaiAWAiIhIA7EAEBERaSAWACIiIg3EAkBERKSBWACIiIg0
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
YmYZhmEY5gNJZ2cXOjo6Xy3iMqERMZpRAHJy8xEVk6A0HoZhGIb5kBL/iomNS0ZichpGR8emRslX
M6sKABEREb0dLABEREQaiAWAiIhIA7EAEBERaSAWACIiIg3EAkBERKSBZkwBkBMnIiIi9Whra5sZ
BaCluQn9/f0MwzAMw6ghcvB/rwWgoK4XZbWtqKmuQnV1NcMwDMMwakhVVZXyNsCv/eDQ47yTAiAn
VtvSg77eHmUmGIZhGIZ595Fr/vJ/VQP+83lnBaCmWcyImLiqK2UYhmEY5v3m3W0BEAWgr2fyChiG
YRiGmVmRY3RT+9veB0BMrKKxG02iWch2wTAMwzDMzIoco6vFyrocs99aAXg8EdkqGIZhGIaZmZk+
+D8eu9+4ADAMwzAMM7vCAsAwDMMwGpjXKgCFogDICzIMwzAMMzuTL/LSBWDnzp1VPQNAWz+UCzEM
wzAMMzvTIjIC4OQpI0wN8y+2bNnykpMnDccMDE6NycbAMAzDMMzszalTp8fWrF07PDXMExERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERkab7i7/4/wONajXQKlwVFwAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[$MainConfig = Get-Content .\config\main.config
Write-Host "Load config"
foreach ($line in $MainConfig)
{
	Switch ($line)
	{
		{ ($line -like "#*") -or ($line -like $null) -or ($line -like "{*") } { }
		default {
			$Name = [regex]::split($line, '==')[0].Replace(" ", "")
			$Value = [regex]::split($line, '==')[1]
			try
			{
				Get-Variable -Name $Name -ErrorAction SilentlyContinue
			}
			catch
			{
				New-Variable -Name $Name -Value $Value
			}
			finally
			{
				Set-Variable -Name $Name -Value $Value
			}
		}
	}
}

$formAPS_Load={
	#TODO: Initialize Form Controls here
	Write-Host "Load module"
	Import-Module -PassThru "$PathToModule$ModuleName" #-Force -ErrorAction Ignore -WarningAction Ignore
	$test = "tesgkdfdagv"
	$Global:isTest = $true
	$Global:OFS = "`r`n"
}


$exitToolStripMenuItem_Click={
	#TODO: Place custom script here
	$formAPS.Close()
}

$aboutToolStripMenuItem_Click={
	#TODO: Place custom script here
	[System.Windows.Forms.MessageBox]::Show("APS v1.0","APS Application");
}



#region Control Helper Functions
function Update-ListViewColumnSort
{
<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.
	
	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.
	
	.PARAMETER ListView
		The ListView control to sort.
	
	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
	
	.PARAMETER SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListView]
		$ListView,
		[Parameter(Mandatory = $true)]
		[int]
		$ColumnIndex,
		[System.Windows.Forms.SortOrder]
		$SortOrder = 'None'
	)
	
	if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
	try
	{
		[ListViewItemComparer] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
	}
	#endregion
	
	if ($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort() #Sort the items
	}
	else
	{
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}


function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
    }
    
    $lvGroup = $null
    if ($Group -is [System.Windows.Forms.ListViewGroup])
    {
        $lvGroup = $Group
    }
    elseif ($Group -is [string])
    {
        #$lvGroup = $ListView.Group[$Group] # Case sensitive
        foreach ($groupItem in $ListView.Groups)
        {
            if ($groupItem.Name -eq $Group)
            {
                $lvGroup = $groupItem
                break
            }
        }
        
        if ($null -eq $lvGroup)
        {
            $lvGroup = $ListView.Groups.Add($Group, $Group)
        }
    }
    
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($null -ne $SubItems)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($null -ne $lvGroup)
		{
			$listitem.Group = $lvGroup
		}
	}
}


function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}
#endregion

$buttonCreate_Click={
	#TODO: Place custom script here
	#initials parameters
	try
	{
		$Global:OFS = "`r`n"
		$textboxCreateLog.Clear();
		$errorprovider1.Clear();
		$Type = $comboboxCreateType.SelectedItem;
		$ADlogin = $textboxCreateLogin.Text;
		$filename = $textboxCreateFileName.Text;
		
		if ($textboxConfrimPassword.Text -ne $textboxCreatePassword.Text)
		{
			[System.Windows.Forms.MessageBox]::Show('Passwords does not  match', 'Information', 'OK', 'Error')
			return
		}
		$textboxCreateLog.Text += "*LOG*---------Password OK" +$OFS
		$ChildNameFolder = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
		$File = New-Object -TypeName psobject
		$AESKey = New-AESKey -IsTest $true
		$textboxCreateLog.Text += "*LOG*---------AES Key generated OK" + $OFS
		$MainPassword = Convert-ToSequrePas -InputPass $textboxCreatePassword.Text -IsTest $IsTest -AESKey $AESKey
		$textboxCreateLog.Text += "*LOG*---------Security password OK" + $OFS
		$File | Add-Member -MemberType NoteProperty -Name "Security credentials" -Value $AESKey, $MainPassword
		$Date = Get-Date
		$File | Add-Member -MemberType NoteProperty -Name "Date created" -Value $Date
		$File | Add-Member -MemberType NoteProperty -Name "Personal info" -Value $ADlogin, $filename
		$File | Add-Member -MemberType NoteProperty -Name "Type" -Value $Type
		$File | Add-Member -MemberType NoteProperty -Name "ChildNameFolder" -Value $ChildNameFolder
		if (!(Test-Path $PathToFile))
		{
			mkdir $PathToFile
			$textboxCreateLog.Text += "*LOG*---------Create Folder  OK" + $OFS
		}
		else
		{
			$textboxCreateLog.Text += "*LOG*---------Folder  OK" + $OFS
		}
		
		if (!(Test-Path $PathToFile\$ChildNameFolder))
		{
			mkdir $PathToFile\$ChildNameFolder
			$textboxCreateLog.Text += "*LOG*---------Create Folder  OK" + $OFS
		}
		else
		{
			$textboxCreateLog.Text += "*LOG*---------Folder  OK" + $OFS
		}
		$File | Export-Clixml -Path "$PathToFile\$filename.aps"
		$textboxCreateLog.Text += "*LOG*---------File Genereted  OK" + $OFS
	}
	catch
	{
		
		$textboxCreateLog.Text+= "Error $_ when trying create new APS key"
	}
	
}

$textboxPasstoKey_TextChanged={
	#TODO: Place custom script here
	
}

$loadAPSToolStripMenuItem_Click={
	#TODO: Place custom script here
	$textboxPasstoKey.Clear()
	$openfiledialog1.ShowDialog()
	$Global:PathToAPS = $openfiledialog1.FileName.ToString()
	$textboxChosenFile.Text = $Global:PathToAPS
	try
	{
		$Global:APS = Import-Clixml -Path $global:PathToAPS
		$textboxRunLog.Text +="*LOG*---------APS  loaded" +  $OFS
	}
	catch
	{
		$textboxRunLog.Text += "*LOG*---------Error $_ when trying import APS key" + $OFS
	}
}

$buttonRun_Click={
	#TODO: Place custom script here
	$listview1.Items.Clear();
	$SeqPass = $global:APS.'Security credentials'[1]
	$AESKey = $global:APS.'Security credentials'[0]
	$InputPaswword=$textboxPasstoKey.Text
	#$OutPass = $InputPaswword | ConvertTo-SecureString -AsPlainText -Force | ConvertFrom-SecureString -Key $AESKey
	$APSUnSeqPass= Convert-FromSequrePas -InputPass $SeqPass -IsTest $true -AESKey $AESKey
	if (!($APSUnSeqPass -eq $InputPaswword))
	{
		[System.Windows.Forms.MessageBox]::Show('Passwords does not  match', 'Access denied', 'OK', 'Error')
		return
	}
	$global:ASK = Get-ChildItem -Path "$PathToChildFolder\$($global:APS.ChildNameFolder)" | select *
	
	if ($global:ASK -ne $null)
	{
		$parent = $global:ASK | where { $_.Attributes -eq 'Directory' } | select Name
		if ($parent.Count -gt 1)
		{
			$comboboxParent.DataSource = $parent.Name + "none"
			$comboboxParent.SelectedItem = "none"
			$textboxRunLog.Text += "*LOG*---------Add $($parent.Name)  to parent item" + $OFS
		}
		else
		{
			$tmpArray = @("$($parent.Name)", "none")
			$comboboxParent.DataSource = $tmpArray
			$comboboxParent.SelectedItem = "none"
			$textboxRunLog.Text += "*LOG*---------Add one $($parent.Name)  to parent item" + $OFS
		}
		
		#adding to table information
		Add-ToListASK -ASK $global:ASK -IsTest $isTest -listview $listview1 -textboxRunLog $textboxRunLog
	}
	else
	{
		#we need create to the aps path  and document where will be save passwords and logins
		[System.Windows.Forms.MessageBox]::Show('ASK does not have any password', 'Information', 'OK', 'Information')
	}
	
	
}
$buttonAddPassword_Click={
	#TODO: Place custom script here
	try
	{
		$FileName = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
		$AESKey = $global:APS.'Security credentials'[0]
		$Password = Convert-ToSequrePas -InputPass $textboxAddPassword.Text -IsTest $IsTest -AESKey $AESKey
		$textboxRunLog.Text += "*LOG*---------Password Add OK" + $OFS
		$File = New-Object -TypeName psobject
		
		$File | Add-Member -MemberType NoteProperty -Name "PWD" -Value $Password
		$Date = Get-Date
		$File | Add-Member -MemberType NoteProperty -Name "Date created" -Value $Date
		$File | Add-Member -MemberType NoteProperty -Name "Personal info" -Value $textboxAddLogin.Text, $filename
		$File | Add-Member -MemberType NoteProperty -Name "RootFolder" -Value $($global:APS.ChildNameFolder)
		$File | Add-Member -MemberType NoteProperty -Name "ParentObject" -Value $comboboxParent.SelectedItem
		$File | Add-Member -MemberType NoteProperty -Name "Host" -Value $textboxHost.Text
		$textboxRunLog.Text += "*LOG*---------File Add OK" + $OFS
		if ($File.ParentObject -eq "none")
		{
			$File | Export-Clixml -Path "$PathToChildFolder\$($global:APS.ChildNameFolder)\$FileName.ask"
		}
		else
		{
			$File | Export-Clixml -Path "$PathToChildFolder\$($global:APS.ChildNameFolder)\$($comboboxParent.SelectedItem)\$FileName.ask"
		}
		
	}
	catch
	{
		$textboxRunLog.Text += "*LOG*---------Error $_ when trying import APS key" + $OFS
	}
	#$comboboxParent.SelectedItem = "none"
}

$btnAdd_New_Parent_Click={
	#TODO: Place custom script here
	mkdir "$PathToChildFolder\$($global:APS.ChildNameFolder)\$($textboxNewParent.Text)"
	$global:ASK = Get-ChildItem -Path "$PathToChildFolder\$($global:APS.ChildNameFolder)"
	$parent = $global:ASK | where { $_.Attributes -eq 'Directory' } | select Name
	if ($parent.Count -gt 1)
	{
		$comboboxParent.DataSource = $parent.Name + "none"
		$comboboxParent.SelectedItem = "none"
		$textboxRunLog.Text += "*LOG*---------Add $($parent.Name)  to parent item" + $OFS
	}
	else
	{
		$tmpArray = @("$($parent.Name)", "none")
		$comboboxParent.DataSource = $tmpArray
		$comboboxParent.SelectedItem = "none"
		$textboxRunLog.Text += "*LOG*---------Add one $($parent.Name)  to parent item" + $OFS
	}
}

$listview1_DoubleClick={
	#TODO: Place custom script here
	$SelectItemLogin = $listview1.SelectedItems[0].SubItems[2].Text
	if ($SelectItemLogin -ne "-")
	{
		$SelectItemPas = $listview1.SelectedItems[0].SubItems[3].Text
		$AESKey = $global:APS.'Security credentials'[0]
		$UnSeqPass = Convert-FromSequrePas -InputPass $SelectItemPas -IsTest $true -AESKey $AESKey
		$UnSeqPass | clip
		[System.Windows.Forms.MessageBox]::Show("$SelectItemLogin password copy in your clipboard", 'Information', 'OK', 'Information')
	}
	else
	{
		[System.Windows.Forms.MessageBox]::Show("The parent has not any password", 'Information', 'OK', 'Error')
	}
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>