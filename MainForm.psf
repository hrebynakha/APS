<File version="3.1">
  <FileID>2b855348-feeb-402b-ba34-805d19f52a6d</FileID>
  <Preview>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
HnQQoDwOIKVCdEkxxORerEyBeNzOEzsUdudX4csB4zD7YCgSxOBLlccMVHQgq1k8wIv1RH8QQ7wV
qeKhqkier75DKRXK5wDIbYnzFMj37Je1K8cZZNe0ieug+8jf7Gr9vxvv/DtX/DurWn4UsFguLkNe
l84UiB7OjwLuPVgAfoXHWQAKvK/CeOF0TJs2DdPXH8H11Jpe9T7/n8MCQPRgDywAaqloR25uCiz2
r8SYlWa4lNCBvMqHPG8PCQtA92IB+BUeZwF42rEAED3YLy4AIkny0/vEHnlpm9hDrxRfP+rn/HdT
WAC6FwvAr8AC8PBYAIge7FEKQG8PC0D3YgH4FVgAHh4LANGDsQCQobEA/AosAA+PBYDowVgAyNBY
AH6FyspKpQTQz6uvr0dx8VP0tgaix6y5sQHpuYWIL25BQnGzJsIC0L2KiorQ2Kh8LN2PWAAekmxO
XdsTqWttbVWeBSAidW1traiqrUd5Q7tImybC+d+95I5ZW9u9nzDKAkBERKRBLABEREQaxAJARESk
QSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERE
RBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJA
RESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEs
AERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQa
xAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQERE
pEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABE
REQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQC
QEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRB
LABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwARERE
GsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBE
RKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwA
REREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrE
AkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESk
QSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERE
RBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJA
RESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEs
AERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQa
xAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQERE
pEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABE
REQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQC
QEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRB
LABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwARERE
GsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBE
RKRBLABEREQaxAJARESkQSwAREREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwA
REREGsQCQEREpEEsAERERBrEAkBERKRBLABEREQaxAJARESkQSwAREREGtSjCgAREREZTrcXgOqa
WthecYC7hy88PP0YhmEYhnnCkTP3st1NVImd8G4rAG1tbSgqLkFuXgHyGIZhGIZ54pEzt6i4FK2t
rcjKyuqeAkBERETdJzMzkwWAiIhIS+QsZgEgIiLSGBYAIiIiDWIBICIi0iAWACIiIg1iASAiItIg
FgAiIiIN0lABKIXvwZmYNmYVPMv1i7oo9d8H8zOb4FWsX6BX5LEJp833IaBMv0BRAKdVJ2F5KgyV
+iWPJNUaY8R2bON/4koR/agJ+V77MfvrITifoF/URUO2DxyOjsWlFP0CvbrkW7h6bAquZOgXKJqR
6WSK6a+/hldfeQWvKPkAY1fYoMvZe5zEi6Nx9HYg8pv0C4joF9NMAWjPcsXNvf3x+dwjOHQzV7/0
XsWOi7Bjy3jY5egX6OVdnYjNJgtwq1C/QJGBi0M2YO9GD1EtfoWGIsSl5aO4rkW/gOgn1OQg+sxw
jFhojLnH1BtAQ6oDzq15GQei9Av0aqPPw2ztOzgar1+gqELokT1Y8OZq2AQEIEDG0QyLjTdj9q18
/To9U8TeF7H6/G2k1+sXENEvppEC0I7065dxyfQwzK/dxNmdV5GnP0XR0a58LHH+7WXYvWM6bnSe
qF+efXUatu9ZDuci/XJFFi6N3grTbd6454mBTvrztnf5Vjva1ZffQ5y3/efWIc2pSguDzUpj2ET4
4cjCY7hnlovfcfl7VZ10AxYb3sWRGP1i/fLKyAs4ufEznEzUL1ZUIPjICWwbZIs7T3plwebYLswx
CUCz/ndY+X1t15+s19Eul7ej669o1+UPvKuLE388+UH3F7Hwx+0p229D2IG3sMHKBZkN+hOI6BfT
RgFoT8d1m3PYeTELjWl2sDLbgav6vfy6OAsY/fAiXnrpJfz1j/+GjyeuhF8j0Bp9BMuG6Jb/5b/+
BV/M3o6AKt15dH66ALTGmGPO0LeU87447QBcspuV5Tk35mHEp7ptvvjii5h/NgRViQ6YuPoELifW
iBUuY8xqE8yf8hm+eOclvDTiILzz+QhHUjVSQyyxeGcwGsoS4HN0AY7E6k5pL4vBhSW636sXnv8v
vPzBpzgrn+ovCcKpubrlf3v293jti/64kK47j04lQo4eh/H3Z5Hc2qp8Lnhr5k2s3bQcC0/cwu19
k/HKK6/i1VdFPpoIo2uZ4r7bgpiTa/GDXP7Kyxiy7BDCquW2qhB8YCkGi3VfEctHbriANLGuz9qN
2L/NUSncNS6LMXT1apxPkPf/aBwZvwMn7bJQmWmJOYP095cZR+BVIE4uvIFpm+bh+1dfxztzTiCo
HCi+MQX9P9R9P8/89h8w6XgAClvlZRPRo9BEAWhPd4CtuQnOKS9sxuPy8b3YeCJJnBCNQ1uWof+6
iwgPD8eVTQMxa/4KhKbEY9+mpRi+yUZZbr36S8xavK7LsQM/UQDyrivrLhIPoPK813d9j9kHziAu
SDygzVuOVWedxfJgHB7zJ8zafx15wRZ4f/RmHA+vANKO47Xn+2Ly/msIiQyH1dr3sOVaEAr4OidV
pyPUahHEjrn8AsluBzF7rQ8a24oQbG2Md6ftg4/4ffOwNMLiEX1gGVEILwsjfDDrMILFcudTS7Dg
h69w9p4X9xuRYLkRA/75d3heFFJZSl989n0MmGuDuJo6VOWnICwkCEFBQbh9eCaM92yAs5cHju9c
jNXnghAcaoXNa3fC1D4PLVnWMNm8AhsvBiEk1AJrV+zFKZdCFLlsxZ6jlggWv8NpR/viv179Bhu8
RNkttcG6XZa4ZW+Jeas2YtlpR+X+Yr/zW8w+dAEJ/mfx1RvjMW2XPcLSClGTaIWh01Zgs7WHWM8X
B0c+g0VmHsjlK2e9mpwFjOHSlVz21BeATAczHFixHs6VLWhuqUfwuT0wMTqD8HgH7N+xCtv9dc9v
VritxL59y3Hjtj1MdhvjYJiyGCUOM7Fj18O9BJBr+wNGr1iL65n6BfEH8M3mMzi2bz6WHLSEu9y7
EZLNPoGxxTVkB1mizyQTnIqsFI+QZnhnsBFORtUq6yQeehXrrT2R3ah8SRpWk+6L09MniT34VjQ3
NyEv7Dp2TVkNl5QEMZynYKqt/kiUHCdYbf4cZs5RsDOdgVnXdU9btSZb44xR15cAqhF+whQrPtmC
G5GRiJSJSkJOoe4XrjH1KnZPfRtvv/02Xv/rb/HJpFUITkzE4cVf408vv40x6w/CI70UReVN6Ch1
wfppn+OZV97GpO2n4JNRguIKMZ0b3LHzxGU4ut/GuQtWWDV2Oqy9AuBhdQAXXHzgdn4iJq4xxq3O
w3Ji96LPxtNwuHIAg8dtxaEQ3SG2dY6LMWbnFYSInizFmr6NDZZ8CaC3kjPAx8cHjo6OcHZ2ZgwQ
Jycn1NSI8n0XDRSAUvgcmI7X/+W3eFbZy3kZf/njf+LFQSuw32w7Tu2dikvZujVLXFbgoOkanD6z
A6b7F+K6/liAgmszRCFQKwDbcNjED3e/MpB1oT8mr18Hp84DCdPO4pvt1liz8APsEQ+AMbrZjvjj
H6sXgPF7cCFO96AXsf8NbLDxRg4LgMY1o8BnD779X/+KP/1V/g6/hL89/2c8+1ofLDx5DVe3foC9
+rLanH4bVtu+wu4rLrDa2gem+mMB6uMtcWpD1wJQieAjZtg60Br3HfKXcRvGW+dg9DF3xMfHw+fU
DBgZzYBDdhPK8tOUZV7nFmDoi19hoWkEqttqUZSTqix3PT4D/V/6HqvOJKJDbNlq32VYLJuCFRft
cclsK/ZZmmL55H1w8k5E4OUhmLZhE9w6r0DKKXy66TzsbfZg8OydOByoOzohyexTrDl3A6n6+0LU
wbdYAHqx9vZ23L59GxEREUhKSkJCQgLzhHP9+nWUl9/7brOnvgC0p9+Cmck8LLWKQUJcHOJEEhJv
4YDJPpis2oINJisw/ngE6utr4Ll+IKYOXga/KF8Yr12C6edixfJKOC74HJNHrIJ7l2MArEcaY88G
Z+TW14v1RBqa0ZhwEsNnrcOmW6nKsmSLIZiw/TC8HY5g3IKtOOidK5Znwvz7v2LuFgfkh1/AJ+O3
4USEGPqpx/DGKBOci9bt5oTvfQXrrb34DIDGdVRnwOvoFEw45IOEeN3vcHxCABwu7sHcGftw8cQC
fLzGCeX1DUi9tQXz3/gEFkHpcDg8T+xNu6NWLI+zXoHZb36G02n6jSpEATh8FBu/PYtU/ZIfJVpj
x7bF2OCh++VLsZ6NDSsX4ezVczhyYBEuiSLRVBGB40MXwXhVEOJi9mDXnjW4JjbUUBqIfV8vxKb1
nqgWFSDnylEs+vo1zDZ3RaE4j6nxGLw9cCfcY5vQnH0Gg2cYYbtzunJ/STw3EGNNjiHM9TS+nbIF
B/x1rbspdBe+mbEDZ0MLxXoJOPrJHzF3lztyeAxAryQLgNwrTUlJQX5+PnJzc5knHFm4NFYA6hBz
ZhfWDDKBd5t+kV7ylVXYsnIVzthdwPzv/oS//e1bvP/Ccxi3bhUCattQ4rkF4/r8WSzvhw9f/CMm
bt4GP/3TjzrFohiMwgf/+Sc8/7e/ifVEvlgG88gKFAUfxaivX1aWPTN8JayiS9HW2oIIiwno+/4L
ePnlJZg84L+w3MYJBSHW+HraLpyJEgUg/RQ+nLgHF2J1FxRp+i42XfZFLguAhrWhLN4OW96bDcsu
b0+tTb6MfdP645BjIHZO+D3+8rf38epfPsLwCV/gQno7GtKdsGHEH/DXv32MN/76DkZOH4gLXQpA
qNlJbB18HvccGyi1lCLEbBn6PaP73X7m9/+GD8cawa+6HH47xuPzP/0NL7z0It4evgZXo5vR1JCG
G6t/wMd/1i1/b8xW3IpvENdePMhkXsK46Uux/Kq88Hb4bPsG8zYchvLsfkcjclz3YNiX+vvLyLW4
kliNlgwLfD11O44E6p92a2uA9+EB+Pj158V6Q/DNe/+BRZb+KOAxAL1SZwGQe/9yOGVnZzNPOBos
AO1orKpEeUE1uu4otDWUobKiHPVNDajMTxa/iBnIzMpBaU0llHnbVo2yHLk8E5nZOSirrUbTPW+F
EtuuKEJ2WoryS6wkrQAVygF7dSjK0S1PLqhBk/LttqGxLA2J0WEIDQ2H+YKJOGDvj8ImsW5ZNWqb
xcZba1Eo/l3Xorug5ppCVNU3oc2Qr5hQD9OBtqYalGWX63+P7uhorUdtWT6qGsXvYqn8fUtFalou
iiuLIDqs0IK6Yt3ytPRclFSVoO6eO0I7mmtrUVVSd9/9Q2qrLUd+iu53Ozk1HbnFlWKL4lw15chN
1i1PLypH57PwLZWlyFGWJyOzpBI/Hrva0YCSihpUNuhaeEt1IapratDc+f201aAwu/P+UgvlPTPt
8n5RhZqmu5p7QwFy0uT2c5BXmIOKBt43eisWAMNHgwWg52iKMMPkge/itdffwBtvvIxvV5gjvLBZ
2UMiItISFgDDhwWgG3U0ViI/JwNpaWki6civahT7X0RE2sMCYPiwABARUbdjATB8WACIiKjbsQAY
PiwARETU7XpDAcjJy0d+QT5yc9RPz87JQ65Yp+vpObl5yFNZ3t1hASAiom7X0wtAjhje6SmJSIiN
Q3q2yvXLyUFWegpSxTppmTnIuWd5MlJSku5d3gOiqQIgf8GamprR2NjIML86Tc3NLK5Ej0mPLgC5
hSjNi4Dd5mH46sPhOBpQjpL8e9fJL6lBtP1G7Fj/A04E1fx4ekFJLSKsl2DLxikwD61FScG95+vO
aKoA5OYV4Kr9LTg6ezDMr8ptJ3dcu+GIisp7PgryiZP3E1liGxoamW5OczM/cehx6skFILeoDJn+
l2G1qR++XbgXK/d6oKQkX5yWJfbwc5FfUISymlYk2K/GpmXfwNS/FmUFecry8po2xFrNwfoVw0Ux
qEcpC0BnDFsA0tIz4enlpzyAMsyvjZMoAsXF+j+4YyB1dfW4cdNZKSBqxYQxTBxuucDZ1UsZWvR4
9NwCkIuiskz4XDyLfatMYH75AvYt2gmPklIU5OYhNysVSVFBCIlMhJPZXKxcNABHgxpQnpeCBLE8
NDIJt00nYtmyMTgTUscCcCeGLwB+/sH6r4h+HVc3b4MXgKrqGtxydFdegmhubma6KWXllbgtfg5t
bfzYrselxxaA3CKUZvjh4umdWHQwBEVhVji5YwF2uhahUgzPGMcDmPn17/HM88/iv377v/HyN+Ng
Fd+MpJtbManPH/CsWP6H//u/8Mag2bCOYgG4K4YvAL5+QfqviH6d7ioATi6e+q+ou9TVN8DJ2ZMF
4DHqqQUgt6gUGX5WOLN7IfYFNqG9PByXD23GnFXXkJ/phh2rZuDTZZZIKErD7YOTMHviKFxy8cDm
5TPxzVpbpBSn44bJMMyYNBZnw1gA7goLAPVe3VkA+NRz96qprWMBeMx6ZgGQT//nINByD5YPGYU9
juEIi/CG1Y4VWDBxFS7euoA96ydilX0WGhpaEG+/FtuNRsH07FlsM5qJjTdz0dTYihjrediwZhRO
BbMA3BUWAOq9WAC0iwXg8euRBSC3CGX5EXDYMwEv//sf8Oxzz4o8h+f+/Hs822c8FhtvxN4132G7
exUaW5oQa7sCxsvHYcehHdi6aij2+tSiqbUJkeazsHqhKAA8BuDuDbEAUO/FAqBdLACPX88rADnI
Ky5GmqcFdiwcg/kXopCdloSEpDTkpHjh1M4NWDhxMVZvnI/P5x+Df5I3Ts75GoM/GA5rT1/sWDUd
Xy05hcAkLxyZ8BEGfTIaZyP5LoC7wgJAvRcLgHaxADx+Pa8A5KGoIgVep3dh+TercTWtDKWF+cjP
L0RZZRFCbDbAeNFMHLa2wtohf8azz32Mt195GxNWzYZtfCsy3PZi7rdy+Wd47/U3MMloGS5H3vl8
gJ4QFgCiR8QCoF0sAI9fzysAMlnIEvMpIy1T+US/O8vFv7MykJmRjsysbOWT/pKSUpCSmoaMTLE8
Oxe54ryZaXctz8pEllj33u13b1gAiB4RC4B2sQA8fj2zAMiPABbDPC/3/o/wlcvF9cwRxUB+/n9+
vvy8fxG5TP8BQXcvV9btuo1uDgsA0SNiAdAuFoDHr6cWgKc5LABEj4gFQLtYAB4/FgDDhwWA6BGx
AGgXC8DjxwJg+LAAED0iFgDtYgF4/FgADB8WAKJHxAKgXSwAjx8LgOHDAkD0iFgAtIsF4PFjATB8
WACIHhELgHaxADx+LACGj+YKgH9AsP4rol/Hzd2HBUCjWAAev84CkJKSgoKCAt176pknGkdHR20V
ACdnD+VBm2F+bW7cdFb+b0iyADi7eum/ou7S0NjEAvCYyQJw69YthISEIDY2FjExMcwTTHR0NOzt
7bVTAOSDtdx7chV7bgzza+Li5q08A1BdU6v/7TIMWQCuOziJPaQiFBWVMN2U9IwsONx0ZQF4jOQM
CAoKgpubGzw8PJgnHHd3d+X/tbX3PoY9tQWAqLdrbGyEp5e/cvyBWjFhDBP5LExAYChfiqGnDgsA
ERGRBrEAEBERaRALABERkQaxABAREWkQCwAREZEGsQAQERFpEAsAERGRBrEAEBERaRALABERkQax
ABAREWkQCwAREZEGsQAQERFpEAsAERGRBrEAEBERaRALABERkQaxABAREWkQCwAREZEGsQAQERFp
0FNbAOrq6pGUnIaExBSGYRiG6ZYkJqWisrJKP5l6lqe2AKRnZMP2yg0EBoUxDMMwTLfE7tptREbF
6SdTz/LUFoC09Ez4B4TovyIiIjK86JgEhEfE6r/qWZ7qAuDrF6T/ioiIyPAiImOV9EQsAERERE8I
C4ASFgAiItIWFgAlLABERKQtLABKWACIiEhbWACUsAAQEZG2sAAoYQEgIiJtYQFQwgJARETawgKg
hAWAiIi0hQVACQsAERFpCwuAEhYAIiLSFhYAJSwARESkLSwASlgAiIhIW1gAlLAAEBGRtrAAKGEB
ICIibWEBUMICQERE2sICoIQFgIiItIUFQAkLABERaQsLgBIWACIi0hYWACUsAEREpC0sAEpYAIiI
SFtYAJSwABARkbawAChhASAiIm1hAVDCAkBERNrCAqCEBYCIiLSFBUAJCwAREWkLC4ASFgAiItIW
FgAlLABERKQtLABKWACIiEhbWACUsAAQEZG2sAAoYQEgIiJtYQFQwgJARETawgKghAWAiIi0hQVA
CQsAERFpCwuAEhYAIiLSFhYAJSwARESkLZFRcQiPYAEwaAHIys6FzeXrcHP3YRiGYZhuyeWrDoiJ
TdBPpp7lqS0Azc0tKCkpQ1FxCcMwDMN0S4pLStHQ2KifTD3LU1sAiIiI6KexABAREWkQCwAREZEG
sQAQERFpEAsAERGRBrEAEBERaRALABERkQZ1SwEgIiKi7mfwAtDe3q40D4ZhGIZhuidyFhusACTm
ViIlJVVcYIZyoQzDMAzDdFcykJqSgvLy8idbAORG5cZLy8pRKtoGwzAMwzDdmzIxkysrq1BZVfUk
nwHQJbWglmEYhmGYHpKUAt0OutrMfqwFQLYLhmEYhmF6VtRm9mMtAAzDMAzD9I6wADAMwzCMBsMC
wDAMwzAazC8uALmFFcgub1HOyDAMwzBM70x2WQvyi6oergCMHj26NiU9F3mFlcjKK2UYhmEYppdG
zvLUjDyInfs6/Zj/aQMHDswYO3Z8hWwLY8YwDMMwDNNbI2e5nOlytuvHPBERERERERERERERERER
ERERERERERER9TK/+c3/D5Ig1tg3hOMzAAAAAElFTkSuQmCC</Preview>
  <Form>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
jg0ZHGEAAA==</Form>
  <Code><![CDATA[
$formAPS_Load={
	#TODO: Initialize Form Controls here
	
}


$exitToolStripMenuItem_Click={
	#TODO: Place custom script here
	$formAPS.Close()
}

$aboutToolStripMenuItem_Click={
	#TODO: Place custom script here
	[System.Windows.Forms.MessageBox]::Show("APS v1.0","APS Application");
}



#region Control Helper Functions
function Update-ListViewColumnSort
{
<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.
	
	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.
	
	.PARAMETER ListView
		The ListView control to sort.
	
	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
	
	.PARAMETER SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListView]
		$ListView,
		[Parameter(Mandatory = $true)]
		[int]
		$ColumnIndex,
		[System.Windows.Forms.SortOrder]
		$SortOrder = 'None'
	)
	
	if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
	try
	{
		[ListViewItemComparer] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
	}
	#endregion
	
	if ($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort() #Sort the items
	}
	else
	{
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}


function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
    }
    
    $lvGroup = $null
    if ($Group -is [System.Windows.Forms.ListViewGroup])
    {
        $lvGroup = $Group
    }
    elseif ($Group -is [string])
    {
        #$lvGroup = $ListView.Group[$Group] # Case sensitive
        foreach ($groupItem in $ListView.Groups)
        {
            if ($groupItem.Name -eq $Group)
            {
                $lvGroup = $groupItem
                break
            }
        }
        
        if ($null -eq $lvGroup)
        {
            $lvGroup = $ListView.Groups.Add($Group, $Group)
        }
    }
    
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($null -ne $SubItems)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($null -ne $lvGroup)
		{
			$listitem.Group = $lvGroup
		}
	}
}


function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}
#endregion

$buttonCreate_Click={
	#TODO: Place custom script here
	#initials parameters
	$Type = $comboboxCreateType.SelectedItem;
	$ADlogin = $textboxCreateLogin.Text;
	$filename = $textboxCreateFileName.Text;
	if ($textboxConfrimPassword.Text -ne $textboxCreatePassword.Text)
	{
		[System.Windows.Forms.MessageBox]::Show('Passwords does not  match', 'Information', 'OK', 'Error')
		return
	}
	$Password = $textboxConfrimPassword.Text
	$i = 0;
	while ($i -ne $Password.Length)
	{
		$NewPassword += $Password[$i] + "*)%(E)(";
		$i++
	}
	#$textboxCreateLog.Text += $Type + $ADlogin + $filename + "test";
	
	[string]$Key = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
	[string]$Folder = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
	$i = 0
	mkdir "C:\NP\APS\$Folder"
	$FileKey = New-Object -TypeName System.Management.Automation.PSObject
	$FileKey | Add-Member -MemberType NoteProperty -Name "Key" -Value $Key
	$FileKey | Add-Member -MemberType NoteProperty -Name "Type" -Value $Type
	$FileKey | Add-Member -MemberType NoteProperty -Name "Login" -Value $ADlogin
	$FileKey | Add-Member -MemberType NoteProperty -Name "Date" -Value $(Get-Date)
	$FileKey | Add-Member -MemberType NoteProperty -Name "Password" -Value $NewPassword
	$FileKey | Add-Member -MemberType NoteProperty -Name "Folder" -Value $Folder
	$FileKey | Add-Member -MemberType NoteProperty -Name "Filename" -Value $filename
	$FileKey | Add-Member -MemberType NoteProperty -Name "FilePath" -Value $null
	$FileKey | Export-Clixml -Path "C:\NP\APS\$Folder\$filename.ask"
	#buildFunction
	$textboxCreateLog.Text += "$Key"
	
}

$textboxPasstoKey_TextChanged={
	#TODO: Place custom script here
	
}

$loadAPSToolStripMenuItem_Click={
	#TODO: Place custom script here
	$openfiledialog1.ShowDialog()
	$PathToFile = $openfiledialog1.FileName.ToString()
	$textboxChosenFile.Text = $PathToFile
	<#
	[string]$nameFile = Get-ChildItem $PathToFile | select Name
	$nameFile = $nameFile.Replace("}", "")
	$nameFile = $nameFile.Substring(7)
	$textFile.Text = $nameFile
	#>
}

$buttonRun_Click={
	#TODO: Place custom script here
	#unscript *)%(E)(
	$global:ASK = Import-Clixml -Path $textboxChosenFile.Text
	$SecurePassword = $global:ASK.Password;
	#$textboxRunLog.Text += "SC**" + $SecurePassword;
	$UnSecPassword = $null;
	$listview1.Items.Clear();
	$i = 0;
	while ($i -ne $SecurePassword.Length)
	{
		if (($SecurePassword[$i] -eq "*") -and ($SecurePassword[$i + 1] -eq ")") -and ($SecurePassword[$i + 2] -eq "%") -and ($SecurePassword[$i + 3] -eq "("))
		{
			$UnSecPassword += $SecurePassword[$i-1]
		}
		$i++
	}
	#$textboxRunLog.Text += "UNSC**" + $UnSecPassword;
	if ($UnSecPassword -ne $textboxPasstoKey.Text)
	{
		[System.Windows.Forms.MessageBox]::Show('Passwords does not  match', 'Access denied', 'OK', 'Error')
		return
	}
	if ($global:ASK.FilePath -ne $null)
	{
		#adding to table information
		$items = Get-ChildItem -Path "C:\NP\APS\$($global:ASK.Folder)\$($global:ASK.FilePath)"
		$i = 0;
		foreach ($item in $items) {
			
			$global:APS = Import-Clixml -Path $item.FullName
			$listv = $listview1.Items.Add($i);
			$listv.SubItems.Add($global:APS.Login);
			$listv.SubItems.Add($global:APS.Password);
			$listv.SubItems.Add($global:APS.ID);
			$listv.SubItems.Add($global:APS.Date.ToString());
			$i++
		}
	}
	else
	{
		#we need create to the aps path  and document where will be save passwords and logins
		[System.Windows.Forms.MessageBox]::Show('ASK does not have any password', 'Information', 'OK', 'Error')
	}
	
	
}

$buttonAdd_Click={
	#TODO: Place custom script here
	$global:ASK = Import-Clixml -Path $textboxChosenFile.Text
	$SecurePassword = $global:ASK.Password;
	$UnSecPassword = $null;
	$i = 0;
	[string]$AddFileName = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
	[string]$BefFileName = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
	while ($i -ne $SecurePassword.Length)
	{
		if (($SecurePassword[$i] -eq "*") -and ($SecurePassword[$i + 1] -eq ")") -and ($SecurePassword[$i + 2] -eq "%") -and ($SecurePassword[$i + 3] -eq "("))
		{
			$UnSecPassword += $SecurePassword[$i - 1]
		}
		$i++
	}
	if ($UnSecPassword -ne $textboxPasstoKey.Text)
	{
		[System.Windows.Forms.MessageBox]::Show('Passwords does not  match', 'Access denied', 'OK', 'Error')
		return
	}
	if ($global:ASK.FilePath -ne $null)
	{
		#adding new login and path into $global:ASK.FilePath
		$ID = (Get-ChildItem -Path "C:\NP\APS\$($global:ASK.Folder)\$($global:ASK.FilePath)").Count
		#creting secure password 
		$NewPassword = $null;
		$AddPassword = $textboxAddPassword.Text;
		$i = 0;
		while ($i -ne $AddPassword.Length)
		{
			$NewPassword += $AddPassword[$i] + "%&(=?";
			$i++	
		}
		#creating new file with passwords keys .aps
		$LoginPass = New-Object -TypeName System.Management.Automation.PSObject
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Login" -Value $textboxAddLogin.Text
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Password" -Value $NewPassword
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Date" -Value $(Get-Date)
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Folder" -Value $FolderName
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Filename" -Value $global:ASK.Filename
		$LoginPass | Add-Member -MemberType NoteProperty -Name "ID" -Value ($ID + 1);
		$LoginPass | Export-Clixml -Path "C:\NP\APS\$($global:ASK.Folder)\$($global:ASK.FilePath)\$BefFileName$($ID + 1)$(Get-Date -Format "ss")$AddFileName.aps"
		$textboxRunLog.Text += "********Adding new file C:\NP\APS\$($global:ASK.Folder)\$($FolderName)\$BefFileName$($ID + 1)$(Get-Date -Format "ss")$AddFileName.aps"
	}
	else
	{
		#this is first time adding loging and password
		#creating and updating file .ask
		[string]$FolderName = -join (1 .. 24 | % { [char[]]'ABCDEFGHIJKLMNOPQRSTUWXYZ1234567890abcdfeghijklmnopqrstuvwxyz' | Get-Random })
		$global:ASK.FilePath = $FolderName;
		if (!(Test-Path "C:\NP\APS\$($global:ASK.Folder)"))
		{
			mkdir "C:\NP\APS\$($global:ASK.Folder)"
		}
		$global:ASK | Export-Clixml -Path ("C:\NP\APS\$($global:ASK.Folder)\$($global:ASK.Filename).ask")
		
		mkdir "C:\NP\APS\$($global:ASK.Folder)\$($FolderName)"
		$ID = (Get-ChildItem -Path "C:\NP\APS\$($global:ASK.Folder)\$($FolderName)").Count
		#creting secure password
		$NewPassword = $null;
		$AddPassword = $textboxAddPassword.Text;
		$i = 0;
		while ($i -ne $AddPassword.Length)
		{
			$NewPassword += $AddPassword[$i] + "%&(=?";
			$i++
		}
		#creating new file with passwords keys .aps
		$LoginPass = New-Object -TypeName System.Management.Automation.PSObject
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Login" -Value $textboxAddLogin.Text
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Password" -Value $NewPassword
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Date" -Value $(Get-Date)
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Folder" -Value $FolderName
		$LoginPass | Add-Member -MemberType NoteProperty -Name "Filen" -Value $global:ASK.Filename
		$LoginPass | Add-Member -MemberType NoteProperty -Name "ID" -Value ($ID + 1);
		$LoginPass | Export-Clixml -Path "C:\NP\APS\$($global:ASK.Folder)\$($FolderName)\$BefFileName$($ID + 1)$(Get-Date -Format "ss")$AddFileName.aps"
		
		$textboxRunLog.Text += "********Adding new file C:\NP\APS\$($global:ASK.Folder)\$($FolderName)\$BefFileName$($ID + 1)$(Get-Date -Format "ss")$AddFileName.aps"
	}
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>